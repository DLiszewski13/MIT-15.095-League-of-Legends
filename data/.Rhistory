install.packages(c("dplyr", "ggplot2", "benchmarkme"))
library("benchmarkme")
res<-benchmark_std(runs=3)
plot(res)
library("parallel")
detectCores()
library("bemchmatkme")
library("benchmarkme")
get_cpu()
summary_e <- data.frame(case_e,number_telegraph_e , number_prevent_e,accuracy_e,tpr_e,fpr_e,total_cost_e)
summary_e
importance.rf <- data.frame(imp=importance(rf))
importance.rf <- as.data.frame(importance.rf)
# load packages
library(caret)
library(rpart)
#install.packages('rpart.plot')
library(rpart.plot)
library(caTools)
library(dplyr)
# set directory
setwd('/Users/pan/Dropbox (MIT)/ML_league/data')
getwd()
# read file
train <- read.csv('train_2y1y_2row_imputed_full.csv')
str(train)
train$result = as.factor(train$result)
levels(train$result) <- c("loss", "win")
train$playoffs = as.factor(train$playoffs)
test = read.csv('test_2y1y_2row_imputed_full.csv')
test$result = as.factor(test$result)
levels(test$result) <- c("loss", "win")
test$playoffs = as.factor(test$playoffs)
tuning_vals <- data.frame(.cp = seq(0, 0.015, by=0.001))
cpCV = train(result~.,
trControl=trainControl(method="cv",number=5, summaryFunction=twoClassSummary, classProbs=TRUE), data=train, method="rpart",minbucket=5,
tuneGrid=tuning_vals, metric="ROC", maximize=TRUE)
ggplot(data=cpCV$results) +
geom_line(aes(x=cp, y=ROC,col='1'), lwd=2) +
theme_bw() +
xlab("cp") +
ylab("ROC") +
theme(axis.title=element_text(size=14), axis.text=element_text(size=14), legend.position='none')
cpCV$bestTune
base.tree = rpart(result ~., method = 'class',data=train, cp=cpCV$bestTune)
PredictTest.Base = predict(base.tree, newdata = test, type = "class")
Confusion.Base = table(test$result, PredictTest.Base)
test <- test %>% filter(!league %in% c('MSC', 'PCS', 'Riot'))
PredictTest.Base = predict(base.tree, newdata = test, type = "class")
test <- test %>% filter(!champion_top %in% c('Diana', 'Janna', 'Kalista', 'Kayn', 'Lillia', 'Sett', 'Skarner', 'Sona', 'Zac'))
e
PredictTest.Base = predict(base.tree, newdata = test, type = "class")
source('~/Dropbox (MIT)/ML_league/src/Prediction/CART.R')
